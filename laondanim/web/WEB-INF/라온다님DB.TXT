-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- USER_TB Table Create SQL
CREATE TABLE USER_TB
(
    NO              NUMBER(10)       NOT NULL, 
    CREATED_DATE    DATE             NULL, 
    IMAGE           VARCHAR2(144)    NULL, 
    USER_ID         VARCHAR2(20)     NULL, 
    PASSWORD        VARCHAR2(20)     NULL, 
    NAME            VARCHAR2(20)     NULL, 
    NICK_NAME       VARCHAR2(20)     NULL, 
    BIRTHDAY        DATE             NULL, 
    GENDER          VARCHAR2(20)     NULL, 
    PHONE           NUMBER(20)       NULL, 
    EMAIL           VARCHAR2(20)     NULL, 
    WARNING_NUM     NUMBER(3)        NULL, 
    CONSTRAINT USER_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE USER_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER USER_TB_AI_TRG
BEFORE INSERT ON USER_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT USER_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER USER_TB_AI_TRG;
/

--DROP SEQUENCE USER_TB_SEQ;
/

COMMENT ON COLUMN USER_TB.NO IS '넘버'
/

COMMENT ON COLUMN USER_TB.CREATED_DATE IS '생성된 날짜'
/

COMMENT ON COLUMN USER_TB.IMAGE IS '사진'
/

COMMENT ON COLUMN USER_TB.USER_ID IS '유저 아이디'
/

COMMENT ON COLUMN USER_TB.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN USER_TB.NAME IS '이름'
/

COMMENT ON COLUMN USER_TB.NICK_NAME IS '닉 이름'
/

COMMENT ON COLUMN USER_TB.BIRTHDAY IS '생년월일'
/

COMMENT ON COLUMN USER_TB.GENDER IS '성별'
/

COMMENT ON COLUMN USER_TB.PHONE IS '휴대전화'
/

COMMENT ON COLUMN USER_TB.EMAIL IS '이메일'
/

COMMENT ON COLUMN USER_TB.WARNING_NUM IS '경고 숫자'
/


-- USER_TB Table Create SQL
CREATE TABLE DANIMGIL_TB
(
    NO                   NUMBER(10)        NOT NULL, 
    USER_TB_NO           NUMBER(10)        NULL, 
    CATEGORY             VARCHAR2(20)      NULL, 
    WRITE_DATE           DATE              NULL, 
    IMAGE                VARCHAR2(144)     NULL, 
    TAG                  VARCHAR2(144)     NULL, 
    TITLE                VARCHAR2(45)      NULL, 
    CONTENT              VARCHAR2(2000)    NULL, 
    TRAVLE_LOCALE        VARCHAR2(45)      NULL, 
    PEOPLE_NUM           NUMBER(3)         NULL, 
    TRAVLE_TYPE          NUMBER(1)         NULL, 
    TRAVLE_START_DATE    DATE              NULL, 
    TRAVLE_END_DATE      DATE              NULL, 
    PUBLIC_ENABLED       NUMBER(1)         NULL, 
    CONSTRAINT DANIMGIL_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE DANIMGIL_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DANIMGIL_TB_AI_TRG
BEFORE INSERT ON DANIMGIL_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DANIMGIL_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER DANIMGIL_TB_AI_TRG;
/

--DROP SEQUENCE DANIMGIL_TB_SEQ;
/

COMMENT ON COLUMN DANIMGIL_TB.NO IS '넘버'
/

COMMENT ON COLUMN DANIMGIL_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN DANIMGIL_TB.CATEGORY IS '카테고리'
/

COMMENT ON COLUMN DANIMGIL_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN DANIMGIL_TB.IMAGE IS '사진'
/

COMMENT ON COLUMN DANIMGIL_TB.TAG IS '태그'
/

COMMENT ON COLUMN DANIMGIL_TB.TITLE IS '제목'
/

COMMENT ON COLUMN DANIMGIL_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN DANIMGIL_TB.TRAVLE_LOCALE IS '여행 지역'
/

COMMENT ON COLUMN DANIMGIL_TB.PEOPLE_NUM IS '인원 숫자'
/

COMMENT ON COLUMN DANIMGIL_TB.TRAVLE_TYPE IS '여행 유형'
/

COMMENT ON COLUMN DANIMGIL_TB.TRAVLE_START_DATE IS '여행 시작 날짜'
/

COMMENT ON COLUMN DANIMGIL_TB.TRAVLE_END_DATE IS '여행 끝 날짜'
/

COMMENT ON COLUMN DANIMGIL_TB.PUBLIC_ENABLED IS '공개 활성여부'
/

ALTER TABLE DANIMGIL_TB
    ADD CONSTRAINT FK_DANIMGIL_TB_USER_TB_NO_USER FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE GILJABI_TB
(
    NO                NUMBER(10)       NOT NULL, 
    CATEGORY          VARCHAR2(20)     NULL, 
    IMAGE             VARCHAR2(144)    NULL, 
    TAG               VARCHAR2(144)    NULL, 
    NAME              VARCHAR2(20)     NULL, 
    ADDRESS           VARCHAR2(144)    NULL, 
    BUSINESS_HOURS    VARCHAR2(20)     NULL, 
    TEL               VARCHAR2(20)     NULL, 
    HOMEPAGE          VARCHAR2(144)    NULL, 
    NAVER             VARCHAR2(144)    NULL, 
    SNS               VARCHAR2(144)    NULL, 
    CONSTRAINT GILJABI_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE GILJABI_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER GILJABI_TB_AI_TRG
BEFORE INSERT ON GILJABI_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT GILJABI_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER GILJABI_TB_AI_TRG;
/

--DROP SEQUENCE GILJABI_TB_SEQ;
/

COMMENT ON COLUMN GILJABI_TB.NO IS '넘버'
/

COMMENT ON COLUMN GILJABI_TB.CATEGORY IS '카테고리'
/

COMMENT ON COLUMN GILJABI_TB.IMAGE IS '사진'
/

COMMENT ON COLUMN GILJABI_TB.TAG IS '태그'
/

COMMENT ON COLUMN GILJABI_TB.NAME IS '이름'
/

COMMENT ON COLUMN GILJABI_TB.ADDRESS IS '주소'
/

COMMENT ON COLUMN GILJABI_TB.BUSINESS_HOURS IS '영업 시간'
/

COMMENT ON COLUMN GILJABI_TB.TEL IS '전화번호'
/

COMMENT ON COLUMN GILJABI_TB.HOMEPAGE IS '홈페이지'
/

COMMENT ON COLUMN GILJABI_TB.NAVER IS '네이버'
/

COMMENT ON COLUMN GILJABI_TB.SNS IS 'SNS'
/


-- USER_TB Table Create SQL
CREATE TABLE DONGHANG_TB
(
    NO                     NUMBER(10)        NOT NULL, 
    USER_TB_NO             NUMBER(10)        NULL, 
    DANIMGIL_TB_NO         NUMBER(10)        NULL, 
    WRITE_DATE             DATE              NULL, 
    VIEWCOUNT              NUMBER(10)        NULL, 
    IMAGE                  VARCHAR2(144)     NULL, 
    TAG                    VARCHAR2(144)     NULL, 
    TITLE                  VARCHAR2(45)      NULL, 
    CONTENT                VARCHAR2(2000)    NULL, 
    TRAVLE_LOCALE          VARCHAR2(45)      NULL, 
    DONGHANG_PEOPLE_NUM    NUMBER(3)         NULL, 
    TRAVLE_START_DATE      DATE              NULL, 
    TRAVLE_END_DATE        DATE              NULL, 
    RECRUIT_START_DATE     DATE              NULL, 
    RECRUIT_END_DATE       DATE              NULL, 
    PW                     NUMBER(4)         NULL, 
    PUBLIC_ENABLED         NUMBER(1)         NULL, 
    ENDED                  NUMBER(1)         NULL, 
    DELETED                NUMBER(1)         NULL, 
    CONSTRAINT DONGHANG_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE DONGHANG_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DONGHANG_TB_AI_TRG
BEFORE INSERT ON DONGHANG_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DONGHANG_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER DONGHANG_TB_AI_TRG;
/

--DROP SEQUENCE DONGHANG_TB_SEQ;
/

COMMENT ON COLUMN DONGHANG_TB.NO IS '넘버'
/

COMMENT ON COLUMN DONGHANG_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN DONGHANG_TB.DANIMGIL_TB_NO IS '다님길 테이블 넘버'
/

COMMENT ON COLUMN DONGHANG_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN DONGHANG_TB.VIEWCOUNT IS '조회수'
/

COMMENT ON COLUMN DONGHANG_TB.IMAGE IS '사진'
/

COMMENT ON COLUMN DONGHANG_TB.TAG IS '태그'
/

COMMENT ON COLUMN DONGHANG_TB.TITLE IS '제목'
/

COMMENT ON COLUMN DONGHANG_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN DONGHANG_TB.TRAVLE_LOCALE IS '여행 지역'
/

COMMENT ON COLUMN DONGHANG_TB.DONGHANG_PEOPLE_NUM IS '동행 인원 숫자'
/

COMMENT ON COLUMN DONGHANG_TB.TRAVLE_START_DATE IS '여행 시작 날짜'
/

COMMENT ON COLUMN DONGHANG_TB.TRAVLE_END_DATE IS '여행 끝 날짜'
/

COMMENT ON COLUMN DONGHANG_TB.RECRUIT_START_DATE IS '모집 시작 날짜'
/

COMMENT ON COLUMN DONGHANG_TB.RECRUIT_END_DATE IS '모집 끝 날짜'
/

COMMENT ON COLUMN DONGHANG_TB.PW IS '비번'
/

COMMENT ON COLUMN DONGHANG_TB.PUBLIC_ENABLED IS '공개 활성여부'
/

COMMENT ON COLUMN DONGHANG_TB.ENDED IS '마감여부'
/

COMMENT ON COLUMN DONGHANG_TB.DELETED IS '삭제여부'
/

ALTER TABLE DONGHANG_TB
    ADD CONSTRAINT FK_DONGHANG_TB_DANIMGIL_TB_NO_ FOREIGN KEY (DANIMGIL_TB_NO)
        REFERENCES DANIMGIL_TB (NO)
/

ALTER TABLE DONGHANG_TB
    ADD CONSTRAINT FK_DONGHANG_TB_USER_TB_NO_USER FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE COMMUNITY_TB
(
    NO            NUMBER(10)        NOT NULL, 
    USER_TB_NO    NUMBER(10)        NULL, 
    CATEGORY      VARCHAR2(20)      NULL, 
    WRITE_DATE    DATE              NULL, 
    VIEWCOUNT     NUMBER(10)        NULL, 
    TAG           VARCHAR2(144)     NULL, 
    TITLE         VARCHAR2(45)      NULL, 
    CONTENT       VARCHAR2(2000)    NULL, 
    CONSTRAINT COMMUNITY_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE COMMUNITY_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER COMMUNITY_TB_AI_TRG
BEFORE INSERT ON COMMUNITY_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT COMMUNITY_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER COMMUNITY_TB_AI_TRG;
/

--DROP SEQUENCE COMMUNITY_TB_SEQ;
/

COMMENT ON COLUMN COMMUNITY_TB.NO IS '넘버'
/

COMMENT ON COLUMN COMMUNITY_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN COMMUNITY_TB.CATEGORY IS '카테고리'
/

COMMENT ON COLUMN COMMUNITY_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN COMMUNITY_TB.VIEWCOUNT IS '조회수'
/

COMMENT ON COLUMN COMMUNITY_TB.TAG IS '태그'
/

COMMENT ON COLUMN COMMUNITY_TB.TITLE IS '제목'
/

COMMENT ON COLUMN COMMUNITY_TB.CONTENT IS '내용'
/

ALTER TABLE COMMUNITY_TB
    ADD CONSTRAINT FK_COMMUNITY_TB_USER_TB_NO_USE FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE DONGHANG_JOIN_TB
(
    NO                NUMBER(10)        NOT NULL, 
    USER_TB_NO        NUMBER(10)        NULL, 
    DONGHANG_TB_NO    NUMBER(10)        NULL, 
    CONTENT           VARCHAR2(2000)    NULL, 
    CONFIRMED         NUMBER(1)         NULL, 
    CANCLED           NUMBER(1)         NULL, 
    REPORTED          NUMBER(1)         NULL, 
    DELETED           NUMBER(1)         NULL, 
    CONSTRAINT DONGHANG_JOIN_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE DONGHANG_JOIN_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DONGHANG_JOIN_TB_AI_TRG
BEFORE INSERT ON DONGHANG_JOIN_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DONGHANG_JOIN_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER DONGHANG_JOIN_TB_AI_TRG;
/

--DROP SEQUENCE DONGHANG_JOIN_TB_SEQ;
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.NO IS '넘버'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.DONGHANG_TB_NO IS '동행 테이블 넘버'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.CONFIRMED IS '확인여부'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.CANCLED IS '취소여부'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.REPORTED IS '신고여부'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.DELETED IS '삭제여부'
/

ALTER TABLE DONGHANG_JOIN_TB
    ADD CONSTRAINT FK_DONGHANG_JOIN_TB_DONGHANG_T FOREIGN KEY (DONGHANG_TB_NO)
        REFERENCES DONGHANG_TB (NO)
/

ALTER TABLE DONGHANG_JOIN_TB
    ADD CONSTRAINT FK_DONGHANG_JOIN_TB_USER_TB_NO FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE DONGHANG_CHAT_TB
(
    NO                NUMBER(10)      NOT NULL, 
    USER_TB_NO        NUMBER(10)      NULL, 
    DONGHANG_TB_NO    NUMBER(10)      NULL, 
    WRITE_DATE        DATE            NULL, 
    MASSAGE           VARCHAR2(45)    NULL, 
    CONSTRAINT DONGHANG_CHAT_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE DONGHANG_CHAT_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DONGHANG_CHAT_TB_AI_TRG
BEFORE INSERT ON DONGHANG_CHAT_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DONGHANG_CHAT_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER DONGHANG_CHAT_TB_AI_TRG;
/

--DROP SEQUENCE DONGHANG_CHAT_TB_SEQ;
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.NO IS '넘버'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.DONGHANG_TB_NO IS '동행 테이블 넘버'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.MASSAGE IS '메세지'
/

ALTER TABLE DONGHANG_CHAT_TB
    ADD CONSTRAINT FK_DONGHANG_CHAT_TB_DONGHANG_T FOREIGN KEY (DONGHANG_TB_NO)
        REFERENCES DONGHANG_TB (NO)
/

ALTER TABLE DONGHANG_CHAT_TB
    ADD CONSTRAINT FK_DONGHANG_CHAT_TB_USER_TB_NO FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE ADMIN_TB
(
    NO          NUMBER(10)      NOT NULL, 
    ADMIN_ID    VARCHAR2(20)    NULL, 
    PASSWORD    VARCHAR2(20)    NULL, 
    NAME        VARCHAR2(20)    NULL, 
    BIRTHDAY    DATE            NULL, 
    PHONE       NUMBER(20)      NULL, 
    EMAIL       VARCHAR2(20)    NULL, 
    CONSTRAINT ADMIN_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE ADMIN_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ADMIN_TB_AI_TRG
BEFORE INSERT ON ADMIN_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ADMIN_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER ADMIN_TB_AI_TRG;
/

--DROP SEQUENCE ADMIN_TB_SEQ;
/

COMMENT ON COLUMN ADMIN_TB.NO IS '넘버'
/

COMMENT ON COLUMN ADMIN_TB.ADMIN_ID IS '관리자 아이디'
/

COMMENT ON COLUMN ADMIN_TB.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN ADMIN_TB.NAME IS '이름'
/

COMMENT ON COLUMN ADMIN_TB.BIRTHDAY IS '생년월일'
/

COMMENT ON COLUMN ADMIN_TB.PHONE IS '휴대전화'
/

COMMENT ON COLUMN ADMIN_TB.EMAIL IS '이메일'
/


-- USER_TB Table Create SQL
CREATE TABLE MIND_TB
(
    NO               NUMBER(10)       NOT NULL, 
    USER_TB_NO       NUMBER(10)       NULL, 
    GILJABI_TB_NO    NUMBER(10)       NULL, 
    ADDRESS          VARCHAR2(144)    NULL, 
    CONSTRAINT MIND_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE MIND_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MIND_TB_AI_TRG
BEFORE INSERT ON MIND_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MIND_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER MIND_TB_AI_TRG;
/

--DROP SEQUENCE MIND_TB_SEQ;
/

COMMENT ON COLUMN MIND_TB.NO IS '넘버'
/

COMMENT ON COLUMN MIND_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN MIND_TB.GILJABI_TB_NO IS '길잡이 테이블 넘버'
/

COMMENT ON COLUMN MIND_TB.ADDRESS IS '주소'
/

ALTER TABLE MIND_TB
    ADD CONSTRAINT FK_MIND_TB_GILJABI_TB_NO_GILJA FOREIGN KEY (GILJABI_TB_NO)
        REFERENCES GILJABI_TB (NO)
/

ALTER TABLE MIND_TB
    ADD CONSTRAINT FK_MIND_TB_USER_TB_NO_USER_TB_ FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE GILJABI_COMMENT_TB
(
    NO               NUMBER(10)        NOT NULL, 
    GILJABI_TB_NO    NUMBER(10)        NULL, 
    USER_TB_NO       NUMBER(10)        NULL, 
    WRITE_DATE       DATE              NULL, 
    TITLE            VARCHAR2(45)      NULL, 
    CONTENT          VARCHAR2(2000)    NULL, 
    REPORTED         NUMBER(1)         NULL, 
    DELETED          NUMBER(1)         NULL, 
    CONSTRAINT GILJABI_COMMENT_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE GILJABI_COMMENT_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER GILJABI_COMMENT_TB_AI_TRG
BEFORE INSERT ON GILJABI_COMMENT_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT GILJABI_COMMENT_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER GILJABI_COMMENT_TB_AI_TRG;
/

--DROP SEQUENCE GILJABI_COMMENT_TB_SEQ;
/

COMMENT ON COLUMN GILJABI_COMMENT_TB.NO IS '넘버'
/

COMMENT ON COLUMN GILJABI_COMMENT_TB.GILJABI_TB_NO IS '길잡이 테이블 넘버'
/

COMMENT ON COLUMN GILJABI_COMMENT_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN GILJABI_COMMENT_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN GILJABI_COMMENT_TB.TITLE IS '제목'
/

COMMENT ON COLUMN GILJABI_COMMENT_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN GILJABI_COMMENT_TB.REPORTED IS '신고여부'
/

COMMENT ON COLUMN GILJABI_COMMENT_TB.DELETED IS '삭제여부'
/

ALTER TABLE GILJABI_COMMENT_TB
    ADD CONSTRAINT FK_GILJABI_COMMENT_TB_GILJABI_ FOREIGN KEY (GILJABI_TB_NO)
        REFERENCES GILJABI_TB (NO)
/

ALTER TABLE GILJABI_COMMENT_TB
    ADD CONSTRAINT FK_GILJABI_COMMENT_TB_USER_TB_ FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE HEART_TB
(
    NO                NUMBER(10)    NOT NULL, 
    USER_TB_NO        NUMBER(10)    NULL, 
    GILJABI_TB_NO     NUMBER(10)    NULL, 
    DANIMGIL_TB_NO    NUMBER(10)    NULL, 
    CANCLED           NUMBER(1)     NULL, 
    CONSTRAINT HEART_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE HEART_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER HEART_TB_AI_TRG
BEFORE INSERT ON HEART_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT HEART_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER HEART_TB_AI_TRG;
/

--DROP SEQUENCE HEART_TB_SEQ;
/

COMMENT ON COLUMN HEART_TB.NO IS '넘버'
/

COMMENT ON COLUMN HEART_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN HEART_TB.GILJABI_TB_NO IS '길잡이 테이블 넘버'
/

COMMENT ON COLUMN HEART_TB.DANIMGIL_TB_NO IS '다님길 테이블 넘버'
/

COMMENT ON COLUMN HEART_TB.CANCLED IS '취소여부'
/

ALTER TABLE HEART_TB
    ADD CONSTRAINT FK_HEART_TB_GILJABI_TB_NO_GILJ FOREIGN KEY (GILJABI_TB_NO)
        REFERENCES GILJABI_TB (NO)
/

ALTER TABLE HEART_TB
    ADD CONSTRAINT FK_HEART_TB_USER_TB_NO_USER_TB FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/

ALTER TABLE HEART_TB
    ADD CONSTRAINT FK_HEART_TB_DANIMGIL_TB_NO_DAN FOREIGN KEY (DANIMGIL_TB_NO)
        REFERENCES DANIMGIL_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE REPORTS_TB
(
    NO                NUMBER(10)    NOT NULL, 
    USER_TB_NO        NUMBER(10)    NULL, 
    DANIMGIL_TB_NO    NUMBER(10)    NULL, 
    DONGHANG_TB_NO    NUMBER(10)    NULL, 
    GILJABI_TB_NO     NUMBER(10)    NULL, 
    CONSTRAINT REPORTS_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE REPORTS_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER REPORTS_TB_AI_TRG
BEFORE INSERT ON REPORTS_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT REPORTS_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER REPORTS_TB_AI_TRG;
/

--DROP SEQUENCE REPORTS_TB_SEQ;
/

COMMENT ON COLUMN REPORTS_TB.NO IS '넘버'
/

COMMENT ON COLUMN REPORTS_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN REPORTS_TB.DANIMGIL_TB_NO IS '다님길 테이블 넘버'
/

COMMENT ON COLUMN REPORTS_TB.DONGHANG_TB_NO IS '동행 테이블 넘버'
/

COMMENT ON COLUMN REPORTS_TB.GILJABI_TB_NO IS '길잡이 테이블 넘버'
/

ALTER TABLE REPORTS_TB
    ADD CONSTRAINT FK_REPORTS_TB_DANIMGIL_TB_NO_D FOREIGN KEY (DANIMGIL_TB_NO)
        REFERENCES DANIMGIL_TB (NO)
/

ALTER TABLE REPORTS_TB
    ADD CONSTRAINT FK_REPORTS_TB_GILJABI_TB_NO_GI FOREIGN KEY (GILJABI_TB_NO)
        REFERENCES GILJABI_TB (NO)
/

ALTER TABLE REPORTS_TB
    ADD CONSTRAINT FK_REPORTS_TB_USER_TB_NO_USER_ FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/

ALTER TABLE REPORTS_TB
    ADD CONSTRAINT FK_REPORTS_TB_DONGHANG_TB_NO_D FOREIGN KEY (DONGHANG_TB_NO)
        REFERENCES DONGHANG_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE ALARM_TB
(
    NO                       NUMBER(10)      NOT NULL, 
    USER_TB_NO               NUMBER(10)      NULL, 
    DANIMGIL_TB_NO           NUMBER(10)      NULL, 
    DANIMGIL_MASSAGE         VARCHAR2(45)    NULL, 
    NOTICE_TB_NO             NUMBER(10)      NULL, 
    NOTICE_MASSAGE           VARCHAR2(45)    NULL, 
    DONGHANG_TB_NO           NUMBER(10)      NULL, 
    DONGHANG_MASSAGE         VARCHAR2(45)    NULL, 
    DONGHANG_JOIN_TB_NO      NUMBER(10)      NULL, 
    DONGHANG_JOIN_MASSAGE    VARCHAR2(45)    NULL, 
    DONGHANG_CHAT_TB_NO      NUMBER(10)      NULL, 
    DONGHANG_CHAT_MASSAGE    VARCHAR2(45)    NULL, 
    COMMUNITY_TB_NO          NUMBER(10)      NULL, 
    COMMUNITY_MASSAGE        VARCHAR2(45)    NULL, 
    CONSTRAINT ALARM_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE ALARM_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ALARM_TB_AI_TRG
BEFORE INSERT ON ALARM_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ALARM_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER ALARM_TB_AI_TRG;
/

--DROP SEQUENCE ALARM_TB_SEQ;
/

COMMENT ON COLUMN ALARM_TB.NO IS '넘버'
/

COMMENT ON COLUMN ALARM_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN ALARM_TB.DANIMGIL_TB_NO IS '다님길 테이블 넘버'
/

COMMENT ON COLUMN ALARM_TB.DANIMGIL_MASSAGE IS '다님길 메세지'
/

COMMENT ON COLUMN ALARM_TB.NOTICE_TB_NO IS '공지사항 테이블 넘버'
/

COMMENT ON COLUMN ALARM_TB.NOTICE_MASSAGE IS '공지사항 메세지'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_TB_NO IS '동행 테이블 넘버'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_MASSAGE IS '동행 메세지'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_JOIN_TB_NO IS '동행 참여 테이블 넘버'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_JOIN_MASSAGE IS '동행 참여 메세지'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_CHAT_TB_NO IS '동행 채팅 테이블 넘버'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_CHAT_MASSAGE IS '동행 채팅 메세지'
/

COMMENT ON COLUMN ALARM_TB.COMMUNITY_TB_NO IS '커뮤니티 테이블 넘버'
/

COMMENT ON COLUMN ALARM_TB.COMMUNITY_MASSAGE IS '커뮤니티 메세지'
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_COMMUNITY_TB_NO_CO FOREIGN KEY (COMMUNITY_TB_NO)
        REFERENCES COMMUNITY_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_DANIMGIL_TB_NO_DAN FOREIGN KEY (DANIMGIL_TB_NO)
        REFERENCES DANIMGIL_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_USER_TB_NO_USER_TB FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_DONGHANG_TB_NO_DON FOREIGN KEY (DONGHANG_TB_NO)
        REFERENCES DONGHANG_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_DONGHANG_JOIN_TB_N FOREIGN KEY (DONGHANG_JOIN_TB_NO)
        REFERENCES DONGHANG_JOIN_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_DONGHANG_CHAT_TB_N FOREIGN KEY (DONGHANG_CHAT_TB_NO)
        REFERENCES DONGHANG_CHAT_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE DANIMGIL_SCHEDULE_TB
(
    NO                NUMBER(10)       NOT NULL, 
    DANIMGIL_TB_NO    NUMBER(10)       NULL, 
    GILJABI_TB_NO     NUMBER(10)       NULL, 
    DAY               NUMBER(2)        NULL, 
    TYPE              NUMBER(1)        NULL, 
    ORDERS            NUMBER(2)        NULL, 
    NAME              VARCHAR2(20)     NULL, 
    REQUIRED_HOURS    VARCHAR2(20)     NULL, 
    ADDRESS           VARCHAR2(144)    NULL, 
    CONSTRAINT DANIMGIL_SCHEDULE_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE DANIMGIL_SCHEDULE_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DANIMGIL_SCHEDULE_TB_AI_TRG
BEFORE INSERT ON DANIMGIL_SCHEDULE_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DANIMGIL_SCHEDULE_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER DANIMGIL_SCHEDULE_TB_AI_TRG;
/

--DROP SEQUENCE DANIMGIL_SCHEDULE_TB_SEQ;
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.NO IS '넘버'
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.DANIMGIL_TB_NO IS '다님길 테이블 넘버'
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.GILJABI_TB_NO IS '길잡이 테이블 넘버'
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.DAY IS '일차'
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.TYPE IS '유형'
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.ORDERS IS '순서'
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.NAME IS '이름'
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.REQUIRED_HOURS IS '소요 시간'
/

COMMENT ON COLUMN DANIMGIL_SCHEDULE_TB.ADDRESS IS '주소'
/

ALTER TABLE DANIMGIL_SCHEDULE_TB
    ADD CONSTRAINT FK_DANIMGIL_SCHEDULE_TB_DANIMG FOREIGN KEY (DANIMGIL_TB_NO)
        REFERENCES DANIMGIL_TB (NO)
/

ALTER TABLE DANIMGIL_SCHEDULE_TB
    ADD CONSTRAINT FK_DANIMGIL_SCHEDULE_TB_GILJAB FOREIGN KEY (GILJABI_TB_NO)
        REFERENCES GILJABI_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE COMMUNITY_COMMENT_TB
(
    NO                 NUMBER(10)        NOT NULL, 
    USER_TB_NO         NUMBER(10)        NULL, 
    COMMUNITY_TB_NO    NUMBER(10)        NULL, 
    WRITE_DATE         DATE              NULL, 
    TITLE              VARCHAR2(45)      NULL, 
    CONTENT            VARCHAR2(2000)    NULL, 
    REPORTED           NUMBER(1)         NULL, 
    DELETED            NUMBER(1)         NULL, 
    CONSTRAINT COMMUNITY_COMMENT_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE COMMUNITY_COMMENT_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER COMMUNITY_COMMENT_TB_AI_TRG
BEFORE INSERT ON COMMUNITY_COMMENT_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT COMMUNITY_COMMENT_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER COMMUNITY_COMMENT_TB_AI_TRG;
/

--DROP SEQUENCE COMMUNITY_COMMENT_TB_SEQ;
/

COMMENT ON COLUMN COMMUNITY_COMMENT_TB.NO IS '넘버'
/

COMMENT ON COLUMN COMMUNITY_COMMENT_TB.USER_TB_NO IS '유저 테이블 넘버'
/

COMMENT ON COLUMN COMMUNITY_COMMENT_TB.COMMUNITY_TB_NO IS '커뮤니티 테이블 넘버'
/

COMMENT ON COLUMN COMMUNITY_COMMENT_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN COMMUNITY_COMMENT_TB.TITLE IS '제목'
/

COMMENT ON COLUMN COMMUNITY_COMMENT_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN COMMUNITY_COMMENT_TB.REPORTED IS '신고여부'
/

COMMENT ON COLUMN COMMUNITY_COMMENT_TB.DELETED IS '삭제여부'
/

ALTER TABLE COMMUNITY_COMMENT_TB
    ADD CONSTRAINT FK_COMMUNITY_COMMENT_TB_COMMUN FOREIGN KEY (COMMUNITY_TB_NO)
        REFERENCES COMMUNITY_TB (NO)
/

ALTER TABLE COMMUNITY_COMMENT_TB
    ADD CONSTRAINT FK_COMMUNITY_COMMENT_TB_USER_T FOREIGN KEY (USER_TB_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE NOTICE_TB
(
    NO            NUMBER(10)        NOT NULL, 
    ADMIN_NO      NUMBER(10)        NULL, 
    TITLE         VARCHAR2(45)      NULL, 
    CONTENT       VARCHAR2(2000)    NULL, 
    WRITE_DATE    DATE              NULL, 
    DELETED       NUMBER(1)         NULL, 
    CONSTRAINT NOTICE_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE NOTICE_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER NOTICE_TB_AI_TRG
BEFORE INSERT ON NOTICE_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT NOTICE_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER NOTICE_TB_AI_TRG;
/

--DROP SEQUENCE NOTICE_TB_SEQ;
/

COMMENT ON COLUMN NOTICE_TB.NO IS '넘버'
/

COMMENT ON COLUMN NOTICE_TB.ADMIN_NO IS '관리자 넘버'
/

COMMENT ON COLUMN NOTICE_TB.TITLE IS '제목'
/

COMMENT ON COLUMN NOTICE_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN NOTICE_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN NOTICE_TB.DELETED IS '삭제여부'
/

ALTER TABLE NOTICE_TB
    ADD CONSTRAINT FK_NOTICE_TB_ADMIN_NO_ADMIN_TB FOREIGN KEY (ADMIN_NO)
        REFERENCES ADMIN_TB (NO)
/




// 전체 테이블 삭제
DROP TABLE "USER_TB" CASCADE CONSTRAINTS;
DROP TABLE "DANIMGIL_TB" CASCADE CONSTRAINTS;
DROP TABLE "GILJABI_TB" CASCADE CONSTRAINTS;
DROP TABLE "DONGHANG_TB" CASCADE CONSTRAINTS;
DROP TABLE "COMMUNITY_TB" CASCADE CONSTRAINTS;
DROP TABLE "DONGHANG_JOIN_TB" CASCADE CONSTRAINTS;
DROP TABLE "DONGHANG_CHAT_TB" CASCADE CONSTRAINTS;
DROP TABLE "ADMIN_TB" CASCADE CONSTRAINTS;
DROP TABLE "GILJABI_COMMENT_TB" CASCADE CONSTRAINTS;
DROP TABLE "REPORTS_TB" CASCADE CONSTRAINTS;
DROP TABLE "ALARM_TB" CASCADE CONSTRAINTS;
DROP TABLE "DANIMGIL_SCHEDULE_TB" CASCADE CONSTRAINTS;
DROP TABLE "COMMUNITY_COMMENT_TB" CASCADE CONSTRAINTS;
DROP TABLE "NOTICE_TB" CASCADE CONSTRAINTS;

// 전체 시퀀스 삭제
DROP SEQUENCE "ADMIN_TB_SEQ"; 
DROP SEQUENCE "ALARM_TB_SEQ"; 
DROP SEQUENCE "COMMUNITY_COMMENT_TB_SEQ"; 
DROP SEQUENCE "COMMUNITY_TB_SEQ"; 
DROP SEQUENCE "DANIMGIL_SCHEDULE_TB_SEQ"; 
DROP SEQUENCE "DANIMGIL_TB_SEQ"; 
DROP SEQUENCE "DONGHANG_CHAT_TB_SEQ"; 
DROP SEQUENCE "DONGHANG_JOIN_TB_SEQ"; 
DROP SEQUENCE "DONGHANG_TB_SEQ"; 
DROP SEQUENCE "GILJABI_COMMENT_TB_SEQ"; 
DROP SEQUENCE "GILJABI_TB_SEQ"; 
DROP SEQUENCE "NOTICE_TB_SEQ"; 
DROP SEQUENCE "REPORTS_TB_SEQ"; 
DROP SEQUENCE "USER_TB_SEQ"; 


