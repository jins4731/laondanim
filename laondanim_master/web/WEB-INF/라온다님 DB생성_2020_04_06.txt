create user laon identified by laon;
grant connect, resource to laon;



~~~~~~~~~~~~~~~~~~~~~~~~~~~테이블 생성~~~~~~~~~~~~~~~~~~~~~~~



-- USER_TB Table Create SQL
CREATE TABLE USER_TB
(
    NO              NUMBER           NOT NULL, 
    CREATED_DATE    DATE             NULL, 
    USER_ID         VARCHAR2(20)     NULL, 
    PASSWORD        VARCHAR2(20)     NULL, 
    NAME            VARCHAR2(20)     NULL, 
    NICK_NAME       VARCHAR2(20)     NULL, 
    BIRTHDAY        DATE             NULL, 
    GENDER          VARCHAR2(20)     NULL, 
    PHONE           VARCHAR2(20)     NULL, 
    EMAIL           VARCHAR2(20)     NULL, 
    TAG             VARCHAR2(144)    NULL, 
    CONSTRAINT USER_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE USER_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER USER_TB_AI_TRG
BEFORE INSERT ON USER_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT USER_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER USER_TB_AI_TRG;
/

--DROP SEQUENCE USER_TB_SEQ;
/

COMMENT ON TABLE USER_TB IS '회원 테이블'
/

COMMENT ON COLUMN USER_TB.NO IS '회원 기본키'
/

COMMENT ON COLUMN USER_TB.CREATED_DATE IS '가입 날짜'
/

COMMENT ON COLUMN USER_TB.USER_ID IS '회원 아이디'
/

COMMENT ON COLUMN USER_TB.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN USER_TB.NAME IS '회원 이름'
/

COMMENT ON COLUMN USER_TB.NICK_NAME IS '넥네임'
/

COMMENT ON COLUMN USER_TB.BIRTHDAY IS '생년월일'
/

COMMENT ON COLUMN USER_TB.GENDER IS '성별'
/

COMMENT ON COLUMN USER_TB.PHONE IS '휴대전화'
/

COMMENT ON COLUMN USER_TB.EMAIL IS '이메일'
/

COMMENT ON COLUMN USER_TB.TAG IS '가입시 추가하는 관심 태그'
/


-- USER_TB Table Create SQL
CREATE TABLE TRIP_TB
(
    NO                   NUMBER            NOT NULL, 
    USER_NO              NUMBER            NULL, 
    CATEGORY             VARCHAR2(20)      NULL, 
    WRITE_DATE           DATE              NULL, 
    TAG                  VARCHAR2(144)     NULL, 
    TITLE                VARCHAR2(45)      NULL, 
    CONTENT              VARCHAR2(2000)    NULL, 
    TRAVLE_LOCALE        VARCHAR2(45)      NULL, 
    PEOPLE_NUM           NUMBER            NULL, 
    TRAVLE_TYPE          VARCHAR2(20)      NULL, 
    TRAVLE_START_DATE    DATE              NULL, 
    TRAVLE_END_DATE      DATE              NULL, 
    PUBLIC_ENABLED       CHAR(1)           NULL, 
    DELETED              CHAR(1)           NULL, 
    CONSTRAINT TRIP_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE TRIP_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TRIP_TB_AI_TRG
BEFORE INSERT ON TRIP_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TRIP_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER TRIP_TB_AI_TRG;
/

--DROP SEQUENCE TRIP_TB_SEQ;
/

COMMENT ON TABLE TRIP_TB IS '여행기 테이블'
/

COMMENT ON COLUMN TRIP_TB.NO IS '여행기 기본키'
/

COMMENT ON COLUMN TRIP_TB.USER_NO IS '회원 참조키'
/

COMMENT ON COLUMN TRIP_TB.CATEGORY IS '후기 / 일정'
/

COMMENT ON COLUMN TRIP_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN TRIP_TB.TAG IS '태그'
/

COMMENT ON COLUMN TRIP_TB.TITLE IS '제목'
/

COMMENT ON COLUMN TRIP_TB.CONTENT IS '글작성 내용'
/

COMMENT ON COLUMN TRIP_TB.TRAVLE_LOCALE IS '여행 지역'
/

COMMENT ON COLUMN TRIP_TB.PEOPLE_NUM IS '인원 숫자'
/

COMMENT ON COLUMN TRIP_TB.TRAVLE_TYPE IS '가족/친구/커플'
/

COMMENT ON COLUMN TRIP_TB.TRAVLE_START_DATE IS '여행시작일'
/

COMMENT ON COLUMN TRIP_TB.TRAVLE_END_DATE IS '여행마지막일'
/

COMMENT ON COLUMN TRIP_TB.PUBLIC_ENABLED IS '공개/비공개'
/

COMMENT ON COLUMN TRIP_TB.DELETED IS '삭제여부(작성자가 삭제)'
/

ALTER TABLE TRIP_TB
    ADD CONSTRAINT FK_TRIP_TB_USER_NO_USER_TB_NO FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE TRIPINFO_TB
(
    NO                NUMBER           NOT NULL, 
    CATEGORY          VARCHAR2(20)     NULL, 
    TAG               VARCHAR2(144)    NULL, 
    NAME              VARCHAR2(20)     NULL, 
    ADDRESS           VARCHAR2(144)    NULL, 
    BUSINESS_HOURS    VARCHAR2(20)     NULL, 
    TEL               VARCHAR2(20)     NULL, 
    HOMEPAGE          VARCHAR2(144)    NULL, 
    NAVER             VARCHAR2(144)    NULL, 
    SNS               VARCHAR2(144)    NULL, 
    CONSTRAINT TRIPINFO_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE TRIPINFO_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TRIPINFO_TB_AI_TRG
BEFORE INSERT ON TRIPINFO_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TRIPINFO_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER TRIPINFO_TB_AI_TRG;
/

--DROP SEQUENCE TRIPINFO_TB_SEQ;
/

COMMENT ON TABLE TRIPINFO_TB IS '여행정보 테이블'
/

COMMENT ON COLUMN TRIPINFO_TB.NO IS '여행정보 기본키'
/

COMMENT ON COLUMN TRIPINFO_TB.CATEGORY IS '맛집, 명소, 숙소'
/

COMMENT ON COLUMN TRIPINFO_TB.TAG IS '태그'
/

COMMENT ON COLUMN TRIPINFO_TB.NAME IS '상호명'
/

COMMENT ON COLUMN TRIPINFO_TB.ADDRESS IS '주소'
/

COMMENT ON COLUMN TRIPINFO_TB.BUSINESS_HOURS IS '영업시간'
/

COMMENT ON COLUMN TRIPINFO_TB.TEL IS '전화번호'
/

COMMENT ON COLUMN TRIPINFO_TB.HOMEPAGE IS '홈페이지 주소'
/

COMMENT ON COLUMN TRIPINFO_TB.NAVER IS '네이버 주소'
/

COMMENT ON COLUMN TRIPINFO_TB.SNS IS 'SNS 주소'
/


-- USER_TB Table Create SQL
CREATE TABLE DONGHANG_TB
(
    NO                    NUMBER            NOT NULL, 
    USER_NO               NUMBER            NULL, 
    TRIP_NO               NUMBER            NULL, 
    WRITE_DATE            DATE              NULL, 
    VIEWCOUNT             NUMBER            NULL, 
    TAG                   VARCHAR2(144)     NULL, 
    TITLE                 VARCHAR2(45)      NULL, 
    CONTENT               VARCHAR2(2000)    NULL, 
    TRAVLE_LOCALE         VARCHAR2(45)      NULL, 
    TRAVLE_START_DATE     DATE              NULL, 
    TRAVLE_END_DATE       DATE              NULL, 
    RECRUIT_START_DATE    DATE              NULL, 
    RECRUIT_END_DATE      DATE              NULL, 
    PW                    NUMBER            NULL, 
    PUBLIC_ENABLED        CHAR(1)           NULL, 
    ENDED                 CHAR(1)           NULL, 
    DELETED               CHAR(1)           NULL, 
    RECRUIT_PEOPLE_NO     NUMBER            NULL, 
    JOIN_PEOPLE_NO        NUMBER            NULL, 
    CONSTRAINT DONGHANG_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE DONGHANG_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DONGHANG_TB_AI_TRG
BEFORE INSERT ON DONGHANG_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DONGHANG_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER DONGHANG_TB_AI_TRG;
/

--DROP SEQUENCE DONGHANG_TB_SEQ;
/

COMMENT ON TABLE DONGHANG_TB IS '동행 테이블'
/

COMMENT ON COLUMN DONGHANG_TB.NO IS '동행 기본키'
/

COMMENT ON COLUMN DONGHANG_TB.USER_NO IS '회원 참조키'
/

COMMENT ON COLUMN DONGHANG_TB.TRIP_NO IS '여행기 참조키'
/

COMMENT ON COLUMN DONGHANG_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN DONGHANG_TB.VIEWCOUNT IS '조회수'
/

COMMENT ON COLUMN DONGHANG_TB.TAG IS '태그'
/

COMMENT ON COLUMN DONGHANG_TB.TITLE IS '제목'
/

COMMENT ON COLUMN DONGHANG_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN DONGHANG_TB.TRAVLE_LOCALE IS '여행 지역'
/

COMMENT ON COLUMN DONGHANG_TB.TRAVLE_START_DATE IS '여행시작날짜'
/

COMMENT ON COLUMN DONGHANG_TB.TRAVLE_END_DATE IS '여행끝날짜'
/

COMMENT ON COLUMN DONGHANG_TB.RECRUIT_START_DATE IS '모집시작날짜'
/

COMMENT ON COLUMN DONGHANG_TB.RECRUIT_END_DATE IS '모집 끝날짜'
/

COMMENT ON COLUMN DONGHANG_TB.PW IS '비번'
/

COMMENT ON COLUMN DONGHANG_TB.PUBLIC_ENABLED IS '공개 활성 여부'
/

COMMENT ON COLUMN DONGHANG_TB.ENDED IS '마감 여부'
/

COMMENT ON COLUMN DONGHANG_TB.DELETED IS '삭제 여부'
/

COMMENT ON COLUMN DONGHANG_TB.RECRUIT_PEOPLE_NO IS '동행 모집 인원'
/

COMMENT ON COLUMN DONGHANG_TB.JOIN_PEOPLE_NO IS '동행 참여 인원'
/

ALTER TABLE DONGHANG_TB
    ADD CONSTRAINT FK_DONGHANG_TB_TRIP_NO_TRIP_TB FOREIGN KEY (TRIP_NO)
        REFERENCES TRIP_TB (NO)
/

ALTER TABLE DONGHANG_TB
    ADD CONSTRAINT FK_DONGHANG_TB_USER_NO_USER_TB FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE BOARD_TB
(
    NO            NUMBER            NOT NULL, 
    USER_NO       NUMBER            NULL, 
    CATEGORY      VARCHAR2(20)      NULL, 
    WRITE_DATE    DATE              NULL, 
    VIEWCOUNT     NUMBER            NULL, 
    TAG           VARCHAR2(144)     NULL, 
    TITLE         VARCHAR2(45)      NULL, 
    CONTENT       VARCHAR2(2000)    NULL, 
    DELETED       CHAR(1)           NULL, 
    CONSTRAINT BOARD_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE BOARD_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BOARD_TB_AI_TRG
BEFORE INSERT ON BOARD_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BOARD_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER BOARD_TB_AI_TRG;
/

--DROP SEQUENCE BOARD_TB_SEQ;
/

COMMENT ON TABLE BOARD_TB IS '게시판 테이블'
/

COMMENT ON COLUMN BOARD_TB.NO IS '게시판 기본키'
/

COMMENT ON COLUMN BOARD_TB.USER_NO IS '회원 외래키'
/

COMMENT ON COLUMN BOARD_TB.CATEGORY IS '질문 / 자유'
/

COMMENT ON COLUMN BOARD_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN BOARD_TB.VIEWCOUNT IS '조회수'
/

COMMENT ON COLUMN BOARD_TB.TAG IS '태그'
/

COMMENT ON COLUMN BOARD_TB.TITLE IS '제목'
/

COMMENT ON COLUMN BOARD_TB.CONTENT IS '글 내용'
/

COMMENT ON COLUMN BOARD_TB.DELETED IS '삭제 여부'
/

ALTER TABLE BOARD_TB
    ADD CONSTRAINT FK_BOARD_TB_USER_NO_USER_TB_NO FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE DONGHANG_JOIN_TB
(
    NO             NUMBER            NOT NULL, 
    USER_NO        NUMBER            NULL, 
    DONGHANG_NO    NUMBER            NULL, 
    CONTENT        VARCHAR2(2000)    NULL, 
    CONFIRMED      CHAR(1)           NULL, 
    CANCLED        CHAR(1)           NULL, 
    REPORTED       CHAR(1)           NULL, 
    DELETED        CHAR(1)           NULL, 
    CONSTRAINT DONGHANG_JOIN_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE DONGHANG_JOIN_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DONGHANG_JOIN_TB_AI_TRG
BEFORE INSERT ON DONGHANG_JOIN_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DONGHANG_JOIN_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER DONGHANG_JOIN_TB_AI_TRG;
/

--DROP SEQUENCE DONGHANG_JOIN_TB_SEQ;
/

COMMENT ON TABLE DONGHANG_JOIN_TB IS '동행 참여신청서 테이블'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.NO IS '동행 참가신청 기본키'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.USER_NO IS '회원 참조키'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.DONGHANG_NO IS '동행 참조키'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.CONTENT IS '자기소개'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.CONFIRMED IS '동행장이 수락 혹은 거절'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.CANCLED IS '참여한사람이 취소여부'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.REPORTED IS '동행장이 관리(신고 )'
/

COMMENT ON COLUMN DONGHANG_JOIN_TB.DELETED IS '동행장이 삭제 여부'
/

ALTER TABLE DONGHANG_JOIN_TB
    ADD CONSTRAINT FK_DONGHANG_JOIN_TB_DONGHANG_N FOREIGN KEY (DONGHANG_NO)
        REFERENCES DONGHANG_TB (NO)
/

ALTER TABLE DONGHANG_JOIN_TB
    ADD CONSTRAINT FK_DONGHANG_JOIN_TB_USER_NO_US FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE DONGHANG_CHAT_TB
(
    NO               NUMBER          NOT NULL, 
    USER_NO          NUMBER          NULL, 
    DONGHANG_NO      NUMBER          NULL, 
    WRITE_DATE       DATE            NULL, 
    MASSAGE          VARCHAR2(45)    NULL, 
    TRANSFER_NAME    VARCHAR2(20)    NULL, 
    RECIEVER_NAME    VARCHAR2(20)    NULL, 
    CONSTRAINT DONGHANG_CHAT_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE DONGHANG_CHAT_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER DONGHANG_CHAT_TB_AI_TRG
BEFORE INSERT ON DONGHANG_CHAT_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT DONGHANG_CHAT_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER DONGHANG_CHAT_TB_AI_TRG;
/

--DROP SEQUENCE DONGHANG_CHAT_TB_SEQ;
/

COMMENT ON TABLE DONGHANG_CHAT_TB IS '동행 채팅 테이블'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.NO IS '동행 채팅 기본키'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.USER_NO IS '회원 외래키'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.DONGHANG_NO IS '동행 외래키'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.MASSAGE IS '메세지'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.TRANSFER_NAME IS '송신자 이름 보류'
/

COMMENT ON COLUMN DONGHANG_CHAT_TB.RECIEVER_NAME IS '수신자 이름 보류'
/

ALTER TABLE DONGHANG_CHAT_TB
    ADD CONSTRAINT FK_DONGHANG_CHAT_TB_DONGHANG_N FOREIGN KEY (DONGHANG_NO)
        REFERENCES DONGHANG_TB (NO)
/

ALTER TABLE DONGHANG_CHAT_TB
    ADD CONSTRAINT FK_DONGHANG_CHAT_TB_USER_NO_US FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE ADMIN_TB
(
    NO          NUMBER          NOT NULL, 
    ADMIN_ID    VARCHAR2(20)    NULL, 
    PASSWORD    VARCHAR2(20)    NULL, 
    NAME        VARCHAR2(20)    NULL, 
    BIRTHDAY    DATE            NULL, 
    PHONE       VARCHAR2(20)    NULL, 
    EMAIL       VARCHAR2(20)    NULL, 
    CONSTRAINT ADMIN_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE ADMIN_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ADMIN_TB_AI_TRG
BEFORE INSERT ON ADMIN_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ADMIN_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER ADMIN_TB_AI_TRG;
/

--DROP SEQUENCE ADMIN_TB_SEQ;
/

COMMENT ON COLUMN ADMIN_TB.NO IS '넘버'
/

COMMENT ON COLUMN ADMIN_TB.ADMIN_ID IS '관리자 아이디'
/

COMMENT ON COLUMN ADMIN_TB.PASSWORD IS '비밀번호'
/

COMMENT ON COLUMN ADMIN_TB.NAME IS '이름'
/

COMMENT ON COLUMN ADMIN_TB.BIRTHDAY IS '생년월일'
/

COMMENT ON COLUMN ADMIN_TB.PHONE IS '휴대전화'
/

COMMENT ON COLUMN ADMIN_TB.EMAIL IS '이메일'
/


-- USER_TB Table Create SQL
CREATE TABLE MIND_TB
(
    NO             NUMBER     NOT NULL, 
    USER_NO        NUMBER     NULL, 
    TRIPINFO_NO    NUMBER     NULL, 
    CANCLED        CHAR(1)    NULL, 
    CONSTRAINT MIND_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE MIND_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER MIND_TB_AI_TRG
BEFORE INSERT ON MIND_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MIND_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER MIND_TB_AI_TRG;
/

--DROP SEQUENCE MIND_TB_SEQ;
/

COMMENT ON TABLE MIND_TB IS '찜목록 테이블'
/

COMMENT ON COLUMN MIND_TB.NO IS '찜 기본키'
/

COMMENT ON COLUMN MIND_TB.USER_NO IS '회원 참조키'
/

COMMENT ON COLUMN MIND_TB.TRIPINFO_NO IS '여행 정보 참조키'
/

COMMENT ON COLUMN MIND_TB.CANCLED IS '취소 여부'
/

ALTER TABLE MIND_TB
    ADD CONSTRAINT FK_MIND_TB_TRIPINFO_NO_TRIPINF FOREIGN KEY (TRIPINFO_NO)
        REFERENCES TRIPINFO_TB (NO)
/

ALTER TABLE MIND_TB
    ADD CONSTRAINT FK_MIND_TB_USER_NO_USER_TB_NO FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE TRIPINFO_COMMENT_TB
(
    NO             NUMBER            NOT NULL, 
    TRIPINFO_NO    NUMBER            NULL, 
    USER_NO        NUMBER            NULL, 
    WRITE_DATE     DATE              NULL, 
    CONTENT        VARCHAR2(2000)    NULL, 
    DELETED        CHAR(1)           NULL, 
    CONSTRAINT TRIPINFO_COMMENT_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE TRIPINFO_COMMENT_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TRIPINFO_COMMENT_TB_AI_TRG
BEFORE INSERT ON TRIPINFO_COMMENT_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TRIPINFO_COMMENT_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER TRIPINFO_COMMENT_TB_AI_TRG;
/

--DROP SEQUENCE TRIPINFO_COMMENT_TB_SEQ;
/

COMMENT ON TABLE TRIPINFO_COMMENT_TB IS '여행정보 댓글 테이블'
/

COMMENT ON COLUMN TRIPINFO_COMMENT_TB.NO IS '여행정보댓글 기본키'
/

COMMENT ON COLUMN TRIPINFO_COMMENT_TB.TRIPINFO_NO IS '여행정보 참조키'
/

COMMENT ON COLUMN TRIPINFO_COMMENT_TB.USER_NO IS '회원 참조키'
/

COMMENT ON COLUMN TRIPINFO_COMMENT_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN TRIPINFO_COMMENT_TB.CONTENT IS '댓글 내용'
/

COMMENT ON COLUMN TRIPINFO_COMMENT_TB.DELETED IS '삭제했을 때 표시'
/

ALTER TABLE TRIPINFO_COMMENT_TB
    ADD CONSTRAINT FK_TRIPINFO_COMMENT_TB_TRIPINF FOREIGN KEY (TRIPINFO_NO)
        REFERENCES TRIPINFO_TB (NO)
/

ALTER TABLE TRIPINFO_COMMENT_TB
    ADD CONSTRAINT FK_TRIPINFO_COMMENT_TB_USER_NO FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE LIKE_TB
(
    NO         NUMBER     NOT NULL, 
    USER_NO    NUMBER     NULL, 
    TRIP_NO    NUMBER     NULL, 
    CANCLED    CHAR(1)    NULL, 
    CONSTRAINT LIKE_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE LIKE_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER LIKE_TB_AI_TRG
BEFORE INSERT ON LIKE_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT LIKE_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER LIKE_TB_AI_TRG;
/

--DROP SEQUENCE LIKE_TB_SEQ;
/

COMMENT ON TABLE LIKE_TB IS '좋아요 테이블'
/

COMMENT ON COLUMN LIKE_TB.NO IS '좋아요 기본키'
/

COMMENT ON COLUMN LIKE_TB.USER_NO IS '회원 참조키'
/

COMMENT ON COLUMN LIKE_TB.TRIP_NO IS '여행기 참조키'
/

COMMENT ON COLUMN LIKE_TB.CANCLED IS '취소 여부'
/

ALTER TABLE LIKE_TB
    ADD CONSTRAINT FK_LIKE_TB_USER_NO_USER_TB_NO FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/

ALTER TABLE LIKE_TB
    ADD CONSTRAINT FK_LIKE_TB_TRIP_NO_TRIP_TB_NO FOREIGN KEY (TRIP_NO)
        REFERENCES TRIP_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE REPORTS_TB
(
    NO                     NUMBER    NOT NULL, 
    USER_NO                NUMBER    NULL, 
    TRIP_NO                NUMBER    NULL, 
    DONGHANG_NO            NUMBER    NULL, 
    DONGHANG_COMMENT_NO    NUMBER    NULL, 
    TRIPINFO_NO            NUMBER    NULL, 
    TRIPINFO_COMMENT_NO    NUMBER    NULL, 
    BOARD_NO               NUMBER    NULL, 
    BOARD_COMMENT_NO       NUMBER    NULL, 
    CONSTRAINT REPORTS_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE REPORTS_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER REPORTS_TB_AI_TRG
BEFORE INSERT ON REPORTS_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT REPORTS_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER REPORTS_TB_AI_TRG;
/

--DROP SEQUENCE REPORTS_TB_SEQ;
/

COMMENT ON TABLE REPORTS_TB IS '신고 테이블'
/

COMMENT ON COLUMN REPORTS_TB.NO IS '신고 기본키'
/

COMMENT ON COLUMN REPORTS_TB.USER_NO IS '회원 참조키'
/

COMMENT ON COLUMN REPORTS_TB.TRIP_NO IS '여행기 참조키'
/

COMMENT ON COLUMN REPORTS_TB.DONGHANG_NO IS '동행 참조키'
/

COMMENT ON COLUMN REPORTS_TB.DONGHANG_COMMENT_NO IS '동행 댓글 참조키'
/

COMMENT ON COLUMN REPORTS_TB.TRIPINFO_NO IS '여행정보 참조키'
/

COMMENT ON COLUMN REPORTS_TB.TRIPINFO_COMMENT_NO IS '여행정보 댓글 참조키'
/

COMMENT ON COLUMN REPORTS_TB.BOARD_NO IS '게시판 참조키'
/

COMMENT ON COLUMN REPORTS_TB.BOARD_COMMENT_NO IS '게시판 댓글 참조키'
/

ALTER TABLE REPORTS_TB
    ADD CONSTRAINT FK_REPORTS_TB_TRIP_NO_TRIP_TB_ FOREIGN KEY (TRIP_NO)
        REFERENCES TRIP_TB (NO)
/

ALTER TABLE REPORTS_TB
    ADD CONSTRAINT FK_REPORTS_TB_TRIPINFO_NO_TRIP FOREIGN KEY (TRIPINFO_NO)
        REFERENCES TRIPINFO_TB (NO)
/

ALTER TABLE REPORTS_TB
    ADD CONSTRAINT FK_REPORTS_TB_USER_NO_USER_TB_ FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/

ALTER TABLE REPORTS_TB
    ADD CONSTRAINT FK_REPORTS_TB_DONGHANG_NO_DONG FOREIGN KEY (DONGHANG_NO)
        REFERENCES DONGHANG_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE ALARM_TB
(
    NO                       NUMBER          NOT NULL, 
    USER_NO                  NUMBER          NULL, 
    TRIP_NO                  NUMBER          NULL, 
    TRIP_MASSAGE             VARCHAR2(45)    NULL, 
    NOTICE_NO                NUMBER          NULL, 
    NOTICE_MASSAGE           VARCHAR2(45)    NULL, 
    DONGHANG_NO              NUMBER          NULL, 
    DONGHANG_MASSAGE         VARCHAR2(45)    NULL, 
    DONGHANG_JOIN_NO         NUMBER          NULL, 
    DONGHANG_JOIN_MASSAGE    VARCHAR2(45)    NULL, 
    DONGHANG_CHAT_NO         NUMBER          NULL, 
    DONGHANG_CHAT_MASSAGE    VARCHAR2(45)    NULL, 
    BOARD_NO                 NUMBER          NULL, 
    BOARD_MASSAGE            VARCHAR2(45)    NULL, 
    CONSTRAINT ALARM_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE ALARM_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER ALARM_TB_AI_TRG
BEFORE INSERT ON ALARM_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT ALARM_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER ALARM_TB_AI_TRG;
/

--DROP SEQUENCE ALARM_TB_SEQ;
/

COMMENT ON COLUMN ALARM_TB.NO IS '넘버'
/

COMMENT ON COLUMN ALARM_TB.USER_NO IS '유저 넘버'
/

COMMENT ON COLUMN ALARM_TB.TRIP_NO IS '여행기 넘버'
/

COMMENT ON COLUMN ALARM_TB.TRIP_MASSAGE IS '여행기 메세지'
/

COMMENT ON COLUMN ALARM_TB.NOTICE_NO IS '공지사항 넘버'
/

COMMENT ON COLUMN ALARM_TB.NOTICE_MASSAGE IS '공지사항 메세지'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_NO IS '동행 넘버'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_MASSAGE IS '동행 메세지'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_JOIN_NO IS '동행 참여 넘버'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_JOIN_MASSAGE IS '동행 참여 메세지'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_CHAT_NO IS '동행 채팅 넘버'
/

COMMENT ON COLUMN ALARM_TB.DONGHANG_CHAT_MASSAGE IS '동행 채팅 메세지'
/

COMMENT ON COLUMN ALARM_TB.BOARD_NO IS '게시판 넘버'
/

COMMENT ON COLUMN ALARM_TB.BOARD_MASSAGE IS '게시판 메세지'
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_BOARD_NO_BOARD_TB_ FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_TRIP_NO_TRIP_TB_NO FOREIGN KEY (TRIP_NO)
        REFERENCES TRIP_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_USER_NO_USER_TB_NO FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_DONGHANG_NO_DONGHA FOREIGN KEY (DONGHANG_NO)
        REFERENCES DONGHANG_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_DONGHANG_JOIN_NO_D FOREIGN KEY (DONGHANG_JOIN_NO)
        REFERENCES DONGHANG_JOIN_TB (NO)
/

ALTER TABLE ALARM_TB
    ADD CONSTRAINT FK_ALARM_TB_DONGHANG_CHAT_NO_D FOREIGN KEY (DONGHANG_CHAT_NO)
        REFERENCES DONGHANG_CHAT_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE TRIP_SCHEDULE_TB
(
    NO                NUMBER          NOT NULL, 
    TRIP_NO           NUMBER          NULL, 
    TRIPINFO_NO       NUMBER          NULL, 
    DAY               NUMBER          NULL, 
    ORDERS            NUMBER          NULL, 
    REQUIRED_HOURS    VARCHAR2(20)    NULL, 
    TRANSPORT         VARCHAR2(20)    NULL, 
    CONSTRAINT TRIP_SCHEDULE_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE TRIP_SCHEDULE_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TRIP_SCHEDULE_TB_AI_TRG
BEFORE INSERT ON TRIP_SCHEDULE_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TRIP_SCHEDULE_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER TRIP_SCHEDULE_TB_AI_TRG;
/

--DROP SEQUENCE TRIP_SCHEDULE_TB_SEQ;
/

COMMENT ON TABLE TRIP_SCHEDULE_TB IS '여행 일정 테이블'
/

COMMENT ON COLUMN TRIP_SCHEDULE_TB.NO IS '여행기 일정 기본키'
/

COMMENT ON COLUMN TRIP_SCHEDULE_TB.TRIP_NO IS '여행기 참조키'
/

COMMENT ON COLUMN TRIP_SCHEDULE_TB.TRIPINFO_NO IS '여행정보 참조키'
/

COMMENT ON COLUMN TRIP_SCHEDULE_TB.DAY IS '일차'
/

COMMENT ON COLUMN TRIP_SCHEDULE_TB.ORDERS IS '일정 순서'
/

COMMENT ON COLUMN TRIP_SCHEDULE_TB.REQUIRED_HOURS IS '이동 소요 시간'
/

COMMENT ON COLUMN TRIP_SCHEDULE_TB.TRANSPORT IS '교통 수단'
/

ALTER TABLE TRIP_SCHEDULE_TB
    ADD CONSTRAINT FK_TRIP_SCHEDULE_TB_TRIP_NO_TR FOREIGN KEY (TRIP_NO)
        REFERENCES TRIP_TB (NO)
/

ALTER TABLE TRIP_SCHEDULE_TB
    ADD CONSTRAINT FK_TRIP_SCHEDULE_TB_TRIPINFO_N FOREIGN KEY (TRIPINFO_NO)
        REFERENCES TRIPINFO_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE BOARD_COMMENT_TB
(
    NO            NUMBER            NOT NULL, 
    USER_NO       NUMBER            NULL, 
    BOARD_NO      NUMBER            NULL, 
    WRITE_DATE    DATE              NULL, 
    CONTENT       VARCHAR2(2000)    NULL, 
    DELETED       CHAR(1)           NULL, 
    CONSTRAINT BOARD_COMMENT_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE BOARD_COMMENT_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BOARD_COMMENT_TB_AI_TRG
BEFORE INSERT ON BOARD_COMMENT_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BOARD_COMMENT_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER BOARD_COMMENT_TB_AI_TRG;
/

--DROP SEQUENCE BOARD_COMMENT_TB_SEQ;
/

COMMENT ON TABLE BOARD_COMMENT_TB IS '게시판 댓글 테이블'
/

COMMENT ON COLUMN BOARD_COMMENT_TB.NO IS '게시판 댓글 기본키'
/

COMMENT ON COLUMN BOARD_COMMENT_TB.USER_NO IS '회원 외래키'
/

COMMENT ON COLUMN BOARD_COMMENT_TB.BOARD_NO IS '게시판 외래키'
/

COMMENT ON COLUMN BOARD_COMMENT_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN BOARD_COMMENT_TB.CONTENT IS '댓글 내용'
/

COMMENT ON COLUMN BOARD_COMMENT_TB.DELETED IS '삭제 여부'
/

ALTER TABLE BOARD_COMMENT_TB
    ADD CONSTRAINT FK_BOARD_COMMENT_TB_BOARD_NO_B FOREIGN KEY (BOARD_NO)
        REFERENCES BOARD_TB (NO)
/

ALTER TABLE BOARD_COMMENT_TB
    ADD CONSTRAINT FK_BOARD_COMMENT_TB_USER_NO_US FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE NOTICE_TB
(
    NO            NUMBER            NOT NULL, 
    ADMIN_NO      NUMBER            NULL, 
    TITLE         VARCHAR2(45)      NULL, 
    CONTENT       VARCHAR2(2000)    NULL, 
    WRITE_DATE    DATE              NULL, 
    DELETED       CHAR(1)           NULL, 
    CONSTRAINT NOTICE_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE NOTICE_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER NOTICE_TB_AI_TRG
BEFORE INSERT ON NOTICE_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT NOTICE_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER NOTICE_TB_AI_TRG;
/

--DROP SEQUENCE NOTICE_TB_SEQ;
/

COMMENT ON COLUMN NOTICE_TB.NO IS '넘버'
/

COMMENT ON COLUMN NOTICE_TB.ADMIN_NO IS '관리자 넘버'
/

COMMENT ON COLUMN NOTICE_TB.TITLE IS '제목'
/

COMMENT ON COLUMN NOTICE_TB.CONTENT IS '내용'
/

COMMENT ON COLUMN NOTICE_TB.WRITE_DATE IS '작성 날짜'
/

COMMENT ON COLUMN NOTICE_TB.DELETED IS '삭제여부'
/

ALTER TABLE NOTICE_TB
    ADD CONSTRAINT FK_NOTICE_TB_ADMIN_NO_ADMIN_TB FOREIGN KEY (ADMIN_NO)
        REFERENCES ADMIN_TB (NO)
/


-- USER_TB Table Create SQL
CREATE TABLE PICTURE_TB
(
    NO             NUMBER           NOT NULL, 
    TRIP_NO        NUMBER           NULL, 
    TRIPINFO_NO    NUMBER           NULL, 
    DONGHANG_NO    NUMBER           NULL, 
    USER_NO        NUMBER           NULL, 
    IMAGE          VARCHAR2(144)    NULL, 
    CONSTRAINT PICTURE_TB_PK PRIMARY KEY (NO)
)
/

CREATE SEQUENCE PICTURE_TB_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER PICTURE_TB_AI_TRG
BEFORE INSERT ON PICTURE_TB 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT PICTURE_TB_SEQ.NEXTVAL
    INTO :NEW.NO
    FROM DUAL;
END;
/

--DROP TRIGGER PICTURE_TB_AI_TRG;
/

--DROP SEQUENCE PICTURE_TB_SEQ;
/

COMMENT ON COLUMN PICTURE_TB.NO IS '사진 기본키'
/

COMMENT ON COLUMN PICTURE_TB.TRIP_NO IS '여행기 참조키'
/

COMMENT ON COLUMN PICTURE_TB.TRIPINFO_NO IS '여행정보 참조키'
/

COMMENT ON COLUMN PICTURE_TB.DONGHANG_NO IS '동행 참조키'
/

COMMENT ON COLUMN PICTURE_TB.USER_NO IS '회원 참조키'
/

COMMENT ON COLUMN PICTURE_TB.IMAGE IS '사진'
/

ALTER TABLE PICTURE_TB
    ADD CONSTRAINT FK_PICTURE_TB_USER_NO_USER_TB_ FOREIGN KEY (USER_NO)
        REFERENCES USER_TB (NO)
/

ALTER TABLE PICTURE_TB
    ADD CONSTRAINT FK_PICTURE_TB_DONGHANG_NO_DONG FOREIGN KEY (DONGHANG_NO)
        REFERENCES DONGHANG_TB (NO)
/

ALTER TABLE PICTURE_TB
    ADD CONSTRAINT FK_PICTURE_TB_TRIPINFO_NO_TRIP FOREIGN KEY (TRIPINFO_NO)
        REFERENCES TRIPINFO_TB (NO)
/

ALTER TABLE PICTURE_TB
    ADD CONSTRAINT FK_PICTURE_TB_TRIP_NO_TRIP_TB_ FOREIGN KEY (TRIP_NO)
        REFERENCES TRIP_TB (NO)
/







~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~테이블 제거~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



DROP TABLE "USER_TB" CASCADE CONSTRAINTS;
DROP TABLE "TRIP_TB" CASCADE CONSTRAINTS;
DROP TABLE "TRIPINFO_TB" CASCADE CONSTRAINTS;
DROP TABLE "DONGHANG_TB" CASCADE CONSTRAINTS;
DROP TABLE "BOARD_TB" CASCADE CONSTRAINTS;
DROP TABLE "DONGHANG_JOIN_TB" CASCADE CONSTRAINTS;
DROP TABLE "DONGHANG_CHAT_TB" CASCADE CONSTRAINTS;
DROP TABLE "ADMIN_TB" CASCADE CONSTRAINTS;
DROP TABLE "MIND_TB" CASCADE CONSTRAINTS;
DROP TABLE "TRIPINFO_COMMENT_TB" CASCADE CONSTRAINTS;
DROP TABLE "LIKE_TB" CASCADE CONSTRAINTS;
DROP TABLE "REPORTS_TB" CASCADE CONSTRAINTS;
DROP TABLE "ALARM_TB" CASCADE CONSTRAINTS;
DROP TABLE "TRIP_SCHEDULE_TB" CASCADE CONSTRAINTS;
DROP TABLE "BOARD_COMMENT_TB" CASCADE CONSTRAINTS;
DROP TABLE "NOTICE_TB" CASCADE CONSTRAINTS;
DROP TABLE "PICTURE_TB" CASCADE CONSTRAINTS;





DROP SEQUENCE "ADMIN_TB_SEQ";
DROP SEQUENCE "ALARM_TB_SEQ";
DROP SEQUENCE "BOARD_COMMENT_TB_SEQ";
DROP SEQUENCE "BOARD_TB_SEQ";
DROP SEQUENCE "DONGHANG_CHAT_TB_SEQ";
DROP SEQUENCE "DONGHANG_JOIN_TB_SEQ";
DROP SEQUENCE "DONGHANG_TB_SEQ";
DROP SEQUENCE "LIKE_TB_SEQ";
DROP SEQUENCE "MIND_TB_SEQ";
DROP SEQUENCE "NOTICE_TB_SEQ";
DROP SEQUENCE "PICTURE_TB_SEQ";
DROP SEQUENCE "REPORTS_TB_SEQ";
DROP SEQUENCE "TRIPINFO_COMMENT_TB_SEQ";
DROP SEQUENCE "TRIPINFO_TB_SEQ";
DROP SEQUENCE "TRIP_SCHEDULE_TB_SEQ";
DROP SEQUENCE "TRIP_TB_SEQ";
DROP SEQUENCE "USER_TB_SEQ";







SELECT * FROM user_tables;
SELECT * FROM USER_SEQUENCES;



SELECT 'DROP TABLE "' || TABLE_NAME || '" CASCADE CONSTRAINTS;' FROM user_tables;
SELECT 'DROP SEQUENCE "' || SEQUENCE_NAME || '";' FROM USER_SEQUENCES;



